A short overview of the newly implemented standalone applications.
And their corresponding servers.

#Pair 1 (GM Client and GM Server for Group OSCORE Joining with DTLS profile)

*Client->GM Application (DTLS):

Name: DtlspClientGroupOSCORE
Security protocol: DTLS
Security type: PSK
CWT protection: PSK
Run with: TestDtlspRSGroupOSCORE

*GM Application:

Name: TestDtlspRSGroupOSCORE
Security protocol: DTLS
Security type: PSK / RPK(?)
CWT protection: PSK / RPK(?)


#Pair 2 (AS Client and AS Server for requesting Token to perform Group OSCORE Joining)
Need updates to take into account new parameters in Token request.

*Client->AS Application:

Name: CoAPClientGroupOSCORE
Security protocol: DTLS
Security type: PSK & RPK
Run with: CoapASTestServerGroupOSCORE

*AS Application:

Name: CoapASTestServerGroupOSCORE
Security protocol: DTLS
Security type: PSK / RPK
CWT protection: PSK / RPK (supports both depending on config)


#Pair 3 (AS/GM Client, AS server and GM server for full procedure with DTLS profile)

*Client->AS & Client->GM Application:
Need updates to take into account new parameters in Token request.
Need updates to take into account new parameters in Join request/response.

Name: DtlsAsRsClientGroupOSCORE
Security protocol: DTLS
Security type: PSK & (RKP for Client->AS)
CWT protection: PSK
Run with: CoapASTestServerGroupOSCORE & TestDtlspRSGroupOSCORE
(Be careful to set the AS & RS ports so they do not overlap)


#Pair 4 (GM Client and GM Server for Group OSCORE Joining with OSCORE profile)

*Client->GM Application (OSCORE):

Similar to code used for testing with Peter van der Stok during the Hackathon.
Includes the new parameters and pop signature.

Name: OscorepClient2RSGroupOSCORE
Security protocol: OSCORE
CWT protection: PSK
Run with: TestOSCoreRSGroupOSCORE

*GM Application (OSCORE):

Name: TestOSCoreRSGroupOSCORE
Security protocol: OSCORE
CWT protection: RPK


TODO:
Update this file after all the recent changes X

Add parameters to Token post & response X
 Depending on if scope is a byte string or not X

Change values & labels in Join response to use integers instead of strings (like "HKDF_HMAC_SHA_256" & "AES_CCM_16_64_128" etc.) X
 Done X

Update GM code to support messages from Peter's client?

Make pub_keys label into integer instead of string X

Lower priority:
Full procedure using OSCORE profile (OSCORE from Client AS and Client RS)
Create some JUnit tests based on the OSCORE profile examples X
Check if "type" parameter is implemented in join request
RPK handshake for DTLS full procedure

